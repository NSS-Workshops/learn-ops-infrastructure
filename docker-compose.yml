version: "3.8"

services:
  database:
    image: postgres:16
    container_name: learning-platform-db
    env_file:
      - .env.dev
    environment:
      POSTGRES_DB: ${LEARN_OPS_DB}
      POSTGRES_USER: ${LEARN_OPS_USER}
      POSTGRES_PASSWORD: ${LEARN_OPS_PASSWORD}
    volumes:
      - learning_platform_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${LEARN_OPS_USER} -d ${LEARN_OPS_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../learn-ops-api
      dockerfile: Dockerfile
    container_name: learning-platform-api
    env_file:
      - ../learn-ops-api/.env.dev
      - .env.dev
    environment:
      - LEARN_OPS_HOST=database
      - LEARN_OPS_PORT=5432
      - LEARN_OPS_ALLOWED_HOSTS=localhost,127.0.0.1,api
      - DEBUG=True
      - DEVELOPMENT_MODE=True
      - LEARN_OPS_DB=${LEARN_OPS_DB}
      - LEARN_OPS_USER=${LEARN_OPS_USER}
      - LEARN_OPS_PASSWORD=${LEARN_OPS_PASSWORD}
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ../learn-ops-api:/app

  client:
    build:
      context: ../learn-ops-client
      dockerfile: Dockerfile
    container_name: learning-platform-client
    env_file:
      - ../learn-ops-client/.env.dev
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ../learn-ops-client:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - GENERATE_SOURCEMAP=false

volumes:
  learning_platform_data:
